library(RSQLite)
fpath = "/Users/jacquelineguo/Documents/NEU/sqlite"
dbfile = "CourseInfo.db"
# if database file already exists, we connect to it, otherwise
# we create a new database
dbcon <- dbConnect(RSQLite::SQLite(), paste0(fpath,dbfile))
library(RSQLite)
fpath = "/Users/jacquelineguo/Documents/NEU/sqlite"
dbfile = "CourseInfo.db"
# if database file already exists, we connect to it, otherwise
# we create a new database
dbcon <- dbConnect(RSQLite::SQLite(), paste0(fpath,dbfile))
library(RSQLite)
# if database file already exists, we connect to it, otherwise
# we create a new database
dbcon <- dbConnect(RSQLite::SQLite(), "/Users/jacquelineguo/Documents/NEU/sqlite/MediaDB.db")
library(RSQLite)
# if database file already exists, we connect to it, otherwise
# we create a new database
dbcon <- dbConnect(RSQLite::SQLite(), "/Users/jacquelineguo/Documents/NEU/sqlite/MediaDB.db")
View(dbcon)
library(RSQLite)
# if database file already exists, we connect to it, otherwise
# we create a new database
dbcon <- dbConnect(RSQLite::SQLite(), "/Users/jacquelineguo/Documents/NEU/sqlite/MediaDB.db")
library(RSQLite)
# if database file already exists, we connect to it, otherwise
# we create a new database
dbcon <- dbConnect(RSQLite::SQLite(), "/Users/jacquelineguo/Documents/NEU/sqlite/MediaDB.db")
dbDisconnect(dbcon)
library(RSQLite)
# if database file already exists, we connect to it, otherwise
# we create a new database
dbcon <- dbConnect(RSQLite::SQLite(), "/Users/jacquelineguo/Documents/NEU/sqlite/MediaDB.db")
library(RSQLite)
library(sqldf)
install.packages("sqldf")
library(RSQLite)
library(sqldf)
# if database file already exists, we connect to it, otherwise
# we create a new database
dbcon <- dbConnect(RSQLite::SQLite(), "/Users/jacquelineguo/Documents/NEU/sqlite/MediaDB.db")
rs -> sqldf("SELECT * FROM invoice_items")
rs <- sqldf("SELECT * FROM invoice_items")
rs <- sqldf("SELECT * FROM invoice_items")
sqlCmd<-"SELECT * FROM invoice_items"
rs<-dbGetQuery(dbcon,sqlCmd)
rs$ExtPrice<-rs$UnitPrice*rs$Quantity
mu<-format(round(mean(rs$ExtPrice),2))
rs
mu
sqlCmd<-"SELECT * FROM invoice_items"
rs<-dbGetQuery(dbcon,sqlCmd)
rs$ExtPrice<-rs$UnitPrice*rs$Quantity
aveExtPrice<-format(round(mean(rs$ExtPrice),2))
rs
aveExtPrice
sqlCmd<-"SELECT * FROM invoice_items"
rs<-dbGetQuery(dbcon,sqlCmd)
rs$ExtPrice<-rs$UnitPrice*rs$Quantity
aveExtPrice<-format(round(mean(rs$ExtPrice),2))
rs
aveExtPrice
rs1 <- sqldf("SELECT InvoiceId, SUM(ExtPrice) AS Total, COUNT(Quantity) AS NumOfItems FROM rs GROUP BY InvoiceId")
rs1 <- sqldf("SELECT InvoiceId, SUM(ExtPrice) AS Total, COUNT(Quantity) AS NumOfItems FROM rs GROUP BY InvoiceId")
rs1
rs2 <- sqldf("select InvoiceId inv_id, count(Quantity) num_of_items, sum(ExtPrice) total from rs group by InvoiceId")
rs2
rs1 <- sqldf("select InvoiceId, sum(ExtPrice) as Total, count(Quantity) as NumOfItems from rs group by InvoiceId")
rs1
plot(x = rs1$NumOfItems, y = rs1$Total)
ggplot(data=rs2, aes(x=num_of_items, y=total, color=inv_id)) + geom_point(alpha=0.8, size=3)
install.packages("ggplot2")
ggplot2(data=rs2, aes(x=num_of_items, y=total, color=inv_id)) + geom_point(alpha=0.8, size=3)
plot(x = rs1$NumOfItems, y = rs1$Total)
library(RSQLite)
library(sqldf)
# if database file already exists, we connect to it, otherwise
# we create a new database
dbcon <- dbConnect(RSQLite::SQLite(), "/Users/jacquelineguo/Documents/NEU/sqlite/MediaDB.db")
sqlCmd<-"SELECT * FROM invoice_items"
rs<-dbGetQuery(dbcon,sqlCmd)
rs$ExtPrice<-rs$UnitPrice*rs$Quantity
aveExtPrice<-format(round(mean(rs$ExtPrice),2))
rs
aveExtPrice
rs1 <- sqldf("select InvoiceId, sum(ExtPrice) as Total, count(Quantity) as NumOfItems from rs group by InvoiceId")
rs1
plot(x = rs1$NumOfItems, y = rs1$Total)
sqlAlter <- "ALTER TABLE invoices ADD DiscPrice NUMERIC(10, 2)"
dbGetQuery(dbcon, sqlAlter)
sqlAlter <- "ALTER TABLE invoices ADD DiscPrice NUMERIC(10, 2)"
dbWriteTable(dbcon, sqlAlter)
sqlAlter <- "ALTER TABLE invoices ADD DiscPrice NUMERIC(10, 2);"
dbGetQuery(dbcon, sqlAlter)
sqlAlterDrop <- "ALTER TABLE invoices DROP IF EXISTS DiscPrice;"
dbGetQuery(dbcon,sqlAlterDrop)
sqlAlterDrop <- "ALTER TABLE invoices DROP IF EXISTS DiscPrice;"
dbGetQuery(dbcon,sqlAlterDrop)
sqlAlterAdd <- "ALTER TABLE invoices ADD DiscPrice NUMERIC(10, 2);"
dbGetQuery(dbcon, sqlAlterAdd)
dbClearResult(rs)
sqlAlterDrop <- "ALTER TABLE invoices DROP IF EXISTS DiscPrice;"
sqldf(sqlAlterDrop)
sqlAlterDrop <- "ALTER TABLE invoices DROP DiscPrice;"
dbGetQuery(dbcon, sqlAlterDrop)
sqlAlterAdd <- "ALTER TABLE invoices ADD DiscPrice NUMERIC(10, 2);"
dbGetQuery(dbcon, sqlAlterAdd)
updateCmd <- "
UPDATE invoices
SET DiscPrice = Total * 0.9
WHERE InvoiceId IN
(SELECT InvoiceId FROM invoice_items GROUP BY InvoiceId HAVING Quantity > 5);
"
updateCmd <- "
UPDATE invoices
SET DiscPrice = Total * 0.9
WHERE InvoiceId IN
(SELECT InvoiceId FROM invoice_items GROUP BY InvoiceId HAVING Quantity > 5);
"
dbGetQuery(dbcon, updateCmd)
sqlAlterDrop <- "ALTER TABLE invoices DROP DiscPrice;"
dbGetQuery(dbcon, sqlAlterDrop)
sqlAlterAdd <- "ALTER TABLE invoices ADD DiscPrice NUMERIC(10, 2);"
dbGetQuery(dbcon, sqlAlterAdd)
updateCmd <- "
UPDATE invoices
SET DiscPrice = Total * 0.9
WHERE InvoiceId IN
(SELECT InvoiceId FROM invoice_items GROUP BY InvoiceId HAVING Quantity > 5);
"
dbGetQuery(dbcon, updateCmd)
updateCmd <- "
UPDATE invoices
SET DiscPrice = Total * 0.9
WHERE InvoiceId IN
(SELECT InvoiceId FROM invoice_items GROUP BY InvoiceId HAVING COUNT(Quantity) > 5);
"
dbGetQuery(dbcon, updateCmd)
updateCmd <- "
UPDATE invoices
SET DiscPrice = ROUND(Total * 0.9, 2)
WHERE InvoiceId IN
(SELECT InvoiceId FROM invoice_items GROUP BY InvoiceId HAVING COUNT(Quantity) > 5);
"
dbGetQuery(dbcon, updateCmd)
updateCmd1 <- "
UPDATE invoices
SET DiscPrice = Total
WHERE DiscPrice IS NULL;
"
dbGetQuery(dbcon, updateCmd1)
sqldf("SELECT * FROM invoices")
dbGetQuery(dbcon, "SELECT * FROM invoices;")
sqlAlterDrop <- "ALTER TABLE invoices DROP DiscPrice;"
dbGetQuery(dbcon, sqlAlterDrop)
sqlAlterDrop <- "ALTER TABLE invoices DROP DiscPrice;"
dbGetQuery(dbcon, sqlAlterDrop)
sqlAlterDrop <- "ALTER TABLE invoices DROP COLUMN IF EXISTS DiscPrice;"
dbGetQuery(dbcon, sqlAlterDrop)
sqlAlterAdd <- "ALTER TABLE invoices ADD DiscPrice NUMERIC(10, 2);"
dbGetQuery(dbcon, sqlAlterAdd)
sqlAlterDrop <- "ALTER TABLE invoices DROP COLUMN DiscPrice;"
dbGetQuery(dbcon, sqlAlterDrop)
sqlAlterAdd <- "ALTER TABLE invoices ADD DiscPrice NUMERIC(10, 2);"
dbGetQuery(dbcon, sqlAlterAdd)
testQuery <- "SELECT * FROM invoices limit 20;"
test.df <- dbGetQuery(dbcon, testQuery)
head(test.df)
sqlAlterDrop <- "ALTER TABLE invoices DROP COLUMN DiscPrice;"
dbGetQuery(dbcon, sqlAlterDrop)
ggplot(data=rs2, aes(x=num_of_items, y=total, color=inv_id)) + geom_point(alpha=0.8, size=3)
plot(x = rs1$NumOfItems, y = rs1$Total)
ggplot(data=rs2, aes(x=num_of_items, y=total, color=inv_id)) + geom_point(alpha=0.8, size=3)
ggplot(data=rs2, aes(x=num_of_items, y=total, color=inv_id)) + geom_point(alpha=0.8, size=3)
library(ggplot2)
ggplot(data=rs2, aes(x=num_of_items, y=total, color=inv_id)) + geom_point(alpha=0.8, size=3)
library(ggplot2)
ggplot(data=rs2, aes(x=num_of_items, y=total, color=inv_id)) + geom_point(alpha=0.5, size=3)
sqlAlterAdd <- "ALTER TABLE invoices ADD DiscPrice NUMERIC(10, 2);"
dbGetQuery(dbcon, sqlAlterAdd)
updateCmd <- "
UPDATE invoices
SET DiscPrice = ROUND(Total * 0.9, 2)
WHERE InvoiceId IN
(SELECT InvoiceId FROM invoice_items GROUP BY InvoiceId HAVING COUNT(Quantity) > 5);
"
dbGetQuery(dbcon, updateCmd)
updateCmd1 <- "
UPDATE invoices
SET DiscPrice = Total
WHERE DiscPrice IS NULL;
"
dbGetQuery(dbcon, updateCmd1)
testQuery <- "SELECT * FROM invoices limit 20;"
test.df <- dbGetQuery(dbcon, testQuery)
head(test.df)
sqlAlterDrop <- "ALTER TABLE invoices DROP COLUMN DiscPrice;"
dbGetQuery(dbcon, sqlAlterDrop)
sqlAlterAdd <- "ALTER TABLE invoices ADD DiscPrice NUMERIC;"
dbGetQuery(dbcon, sqlAlterAdd)
updateCmd <- "
UPDATE invoices
SET DiscPrice = ROUND(Total * 0.9, 2)
WHERE InvoiceId IN
(SELECT InvoiceId FROM invoice_items GROUP BY InvoiceId HAVING COUNT(Quantity) > 5);
"
dbGetQuery(dbcon, updateCmd)
updateCmd1 <- "
UPDATE invoices
SET DiscPrice = Total
WHERE DiscPrice IS NULL;
"
dbGetQuery(dbcon, updateCmd1)
testQuery <- "SELECT * FROM invoices limit 30;"
test.df <- dbGetQuery(dbcon, testQuery)
head(test.df)
sqlAlterAdd <- "ALTER TABLE invoices ADD DiscPrice NUMERIC(10, 2);"
dbGetQuery(dbcon, sqlAlterAdd)
sqlAlterDrop <- "ALTER TABLE invoices DROP COLUMN DiscPrice;"
dbGetQuery(dbcon, sqlAlterDrop)
sqlAlterAdd <- "ALTER TABLE invoices ADD DiscPrice NUMERIC(10, 2);"
dbGetQuery(dbcon, sqlAlterAdd)
updateCmd <- "
UPDATE invoices
SET DiscPrice = ROUND(Total * 0.9, 2)
WHERE InvoiceId IN
(SELECT InvoiceId FROM invoice_items GROUP BY InvoiceId HAVING COUNT(Quantity) > 5);
"
dbGetQuery(dbcon, updateCmd)
updateCmd1 <- "
UPDATE invoices
SET DiscPrice = Total
WHERE DiscPrice IS NULL;
"
dbGetQuery(dbcon, updateCmd1)
testQuery <- "SELECT * FROM invoices limit 30;"
test.df <- dbGetQuery(dbcon, testQuery)
head(test.df)
library(ggplot2)
ggplot(data=rs2, aes(x=num_of_items, y=total, color=steelblue2)) + geom_point(alpha=0.5, size=3)
library(ggplot2)
ggplot(data=rs2, aes(x=num_of_items, y=total, color=blue)) + geom_point(alpha=0.5, size=3)
library(ggplot2)
ggplot(data=rs2, aes(x=num_of_items, y=total, color=Species)) + geom_point(alpha=0.5, size=3)
library(ggplot2)
ggplot(data=rs2, aes(x=num_of_items, y=total, color="smooth")) + geom_point(alpha=0.5, size=3)
plot(x = rs1$NumOfItems, y = rs1$Total)
library(ggplot2)
ggplot(data=rs1, aes(x=NumOfItems, y=Total, color="smooth")) + geom_point(alpha=0.5, size=3)
sqlAlterDrop <- "ALTER TABLE invoices DROP COLUMN DiscPrice;"
dbGetQuery(dbcon, sqlAlterDrop)
sqlAlterDrop <- "ALTER TABLE invoices DROP COLUMN DiscPrice;"
dbGetQuery(dbcon, sqlAlterDrop)
sqlAlterDrop <- "ALTER TABLE invoices DROP COLUMN DiscPrice;"
dbGetQuery(dbcon, sqlAlterDrop)
