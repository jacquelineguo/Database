for (i in 1:nrow(conditions)) {
if (is.na(conditions[i, 1])) {
next
} else {
condition <- paste0('"', conditions[i, 1], '"')
}
cmd <- paste0('insert into conditions(cid, conditions) values (',i,',',condition,')')
dbSendQuery(mydb, cmd)
}
}
insert_conditions()
cmd1<-"select * from airlines"
airlines<-dbGetQuery(mydb,cmd1)
head(airlines)
cmd2<-"select * from airports"
airports<-dbGetQuery(mydb,cmd2)
head(airports)
cmd3 <- "select * from conditions"
conditions<-dbGetQuery(mydb,cmd3)
head(conditions)
insert_incident <- function() {
for (i in 1:nrow(incidents)) {
id <- paste0('"', incidents[i,1], '"')
query <- paste0('select aid from airports where "airportName"=', '"', incidents[i,2], '"')
temp <- sqldf(query)
airport <- temp[1,1]
date <- incidents[i,3]
if(is.na(date))
{
date <- 'NULL'
} else {
date <- gsub( " .*$", "", date)
date <- as.Date(date, format = "%m/%d/%y")
date <- paste0('"',date,'"')
}
query <- paste0('select airlineId from airlines where "airline"=','"',incidents[i,4],'"')
temp1<-sqldf(query)
airline<-temp1[1,1]
if(is.na(incidents[i,5])){
aircraft<-'NULL'
}else{
aircraft<-paste0('"',incidents[i,5],'"')}
query<-paste0('select "phase_new" from phases where "phase"=','"',incidents[i,7],'"')
phase<-sqldf(query)
phase<-paste0('"',phase,'"')
if(is.na(incidents[i,8])){
impact <- FALSE
} else {
impact<- TRUE}
if (is.na(incidents[i, 9]) | incidents[i, 9] == "None") {
condi <- 4
} else {
query <- paste0('select "cid" from conditions where "conditions"=','"',incidents[i, 9],'"')
temp2<-sqldf(query)
condi<-temp2[1,1]
}
cmd<-paste0('insert into incidents (iid, incidentDate, origin, airlineId, aircraft, flightPhase, impact, cond) values (',id,',',date,',',airport,',',airline,',',aircraft,',',phase,', ',impact,',',condi,')')
dbSendQuery(mydb,cmd)
}
}
insert_incident ()
# 1. Library
library(RMySQL)
library(DBI)
library(readr)
library(sqldf)
# 2. Settings
db_user <- 'cs5200neu'
db_password <- 'm@UbDiK2eU5!@Wr'
db_name <- 'cs5200dbxg'
db_host <- 'db4free.net' # AWS Host
db_port <- 3306
# 3. Read data from db
mydb <-  dbConnect(MySQL(), user = db_user, password = db_password,
dbname = db_name, host = db_host, port = db_port)
path <- "/Users/jacquelineguo/Documents/NEU/Spring 2022/CS5200/HW/Practicum1"
fn <- "BirdStrikesData.csv"
fileName <- paste(path, fn, sep = "/")
df <- read_csv(fileName, show_col_types = FALSE)
library(dplyr)
sample_n(df, 1000)
BirdStrikes <- sqldf('
select * from df
where ("Aircraft: Airline/Operator") not in ("MILITARY")')
head(BirdStrikes)
incidents <- sqldf(
'select "Record ID" as ID,
ifnull("Airport: Name","unknown") as Airport, FlightDate as Date,
ifnull("Aircraft: Airline/Operator","UNKNOWN") as Airline,
"Aircraft: Make/Model" as Aircraft,
"Origin State" as Origin,
ifnull("When: Phase of flight","unknown") as Phase,
"Effect: Impact to flight" as Impact,
"Conditions: Sky" as Condition
from BirdStrikes; ')
head(incidents)
airlines <- sqldf('
select distinct ("Aircraft: Airline/Operator") as airlineName                   FROM BirdStrikes
')
airlines <- na.omit(airlines)
head(airlines)
airport <- sqldf('
select distinct ("Airport: Name") as airportName,
"Origin State" as state
from BirdStrikes')
airport <- na.omit(airport)
airport[nrow(airport) + 1,] = c("unknown")
head(airport)
conditions <- sqldf('
select distinct ("Conditions: Sky") as condition
from BirdStrikes')
conditions <- na.omit(conditions)
conditions[nrow(conditions) + 1,] = c("unknown")
head(conditions)
phases <- sqldf('
select distinct (Phase) phase
from incidents')
phases$phase_new <- c('inflight','landing','landing','takeoff','inflight','unknown','unknown')
phases
insert_airports <- function() {
for (i in 1 : nrow(airport)) {
airport1 <- paste0('"', airport[i, 1], '"')
if (is.na(airport[i, 2])) {
state <- 'NULL'
} else {
state <- paste0('"', airport[i, 2], '"')
}
cmd <- paste0('insert into airports(aid, airportName, state) values (',i,',',airport1,',',state,')')
dbSendQuery(mydb,cmd)
}
}
insert_airports()
# 1. Library
library(RMySQL)
library(DBI)
library(readr)
library(sqldf)
# 2. Settings
db_user <- 'cs5200neu'
db_password <- 'm@UbDiK2eU5!@Wr'
db_name <- 'cs5200dbxg'
db_host <- 'db4free.net' # AWS Host
db_port <- 3306
# 3. Read data from db
mydb <-  dbConnect(MySQL(), user = db_user, password = db_password,
dbname = db_name, host = db_host, port = db_port)
# 1. Library
library(RMySQL)
library(DBI)
library(readr)
library(sqldf)
# 2. Settings
db_user <- 'cs5200neu'
db_password <- 'm@UbDiK2eU5!@Wr'
db_name <- 'cs5200dbxg'
db_host <- 'db4free.net' # AWS Host
db_port <- 3306
# 3. Read data from db
mydb <-  dbConnect(MySQL(), user = db_user, password = db_password,
dbname = db_name, host = db_host, port = db_port)
path <- "/Users/jacquelineguo/Documents/NEU/Spring 2022/CS5200/HW/Practicum1"
fn <- "BirdStrikesData.csv"
fileName <- paste(path, fn, sep = "/")
df <- read_csv(fileName, show_col_types = FALSE, nrows="300")
path <- "/Users/jacquelineguo/Documents/NEU/Spring 2022/CS5200/HW/Practicum1"
fn <- "BirdStrikesData.csv"
fileName <- paste(path, fn, sep = "/")
df <- read_csv(fileName, show_col_types = FALSE, n_max=300)
# 1. Library
library(RMySQL)
library(DBI)
library(readr)
library(sqldf)
# 2. Settings
db_user <- 'cs5200neu'
db_password <- 'm@UbDiK2eU5!@Wr'
db_name <- 'cs5200dbxg'
db_host <- 'db4free.net' # AWS Host
db_port <- 3306
# 3. Read data from db
mydb <-  dbConnect(MySQL(), user = db_user, password = db_password,
dbname = db_name, host = db_host, port = db_port)
path <- "/Users/jacquelineguo/Documents/NEU/Spring 2022/CS5200/HW/Practicum1"
fn <- "BirdStrikesData.csv"
fileName <- paste(path, fn, sep = "/")
df <- read_csv(fileName, show_col_types = FALSE, n_max=300)
BirdStrikes <- sqldf('
select * from df
where ("Aircraft: Airline/Operator") not in ("MILITARY")')
head(BirdStrikes)
incidents <- sqldf(
'select "Record ID" as ID,
ifnull("Airport: Name","unknown") as Airport, FlightDate as Date,
ifnull("Aircraft: Airline/Operator","UNKNOWN") as Airline,
"Aircraft: Make/Model" as Aircraft,
"Origin State" as Origin,
ifnull("When: Phase of flight","unknown") as Phase,
"Effect: Impact to flight" as Impact,
"Conditions: Sky" as Condition
from BirdStrikes; ')
head(incidents)
airlines <- sqldf('
select distinct ("Aircraft: Airline/Operator") as airlineName                   FROM BirdStrikes
')
airlines <- na.omit(airlines)
head(airlines)
airport <- sqldf('
select distinct ("Airport: Name") as airportName,
"Origin State" as state
from BirdStrikes')
airport <- na.omit(airport)
airport[nrow(airport) + 1,] = c("unknown")
head(airport)
conditions <- sqldf('
select distinct ("Conditions: Sky") as condition
from BirdStrikes')
conditions <- na.omit(conditions)
conditions[nrow(conditions) + 1,] = c("unknown")
head(conditions)
phases <- sqldf('
select distinct (Phase) phase
from incidents')
phases$phase_new <- c('inflight','landing','landing','takeoff','inflight','unknown','unknown')
path <- "/Users/jacquelineguo/Documents/NEU/Spring 2022/CS5200/HW/Practicum1"
fn <- "BirdStrikesData.csv"
fileName <- paste(path, fn, sep = "/")
df <- read_csv(fileName, show_col_types = FALSE, n_max=500)
BirdStrikes <- sqldf('
select * from df
where ("Aircraft: Airline/Operator") not in ("MILITARY")')
head(BirdStrikes)
incidents <- sqldf(
'select "Record ID" as ID,
ifnull("Airport: Name","unknown") as Airport, FlightDate as Date,
ifnull("Aircraft: Airline/Operator","UNKNOWN") as Airline,
"Aircraft: Make/Model" as Aircraft,
"Origin State" as Origin,
ifnull("When: Phase of flight","unknown") as Phase,
"Effect: Impact to flight" as Impact,
"Conditions: Sky" as Condition
from BirdStrikes; ')
head(incidents)
airlines <- sqldf('
select distinct ("Aircraft: Airline/Operator") as airlineName                   FROM BirdStrikes
')
airlines <- na.omit(airlines)
head(airlines)
airport <- sqldf('
select distinct ("Airport: Name") as airportName,
"Origin State" as state
from BirdStrikes')
airport <- na.omit(airport)
airport[nrow(airport) + 1,] = c("unknown")
head(airport)
conditions <- sqldf('
select distinct ("Conditions: Sky") as condition
from BirdStrikes')
conditions <- na.omit(conditions)
conditions[nrow(conditions) + 1,] = c("unknown")
head(conditions)
phases <- sqldf('
select distinct (Phase) phase
from incidents')
phases$phase_new <- c('inflight','landing','landing','takeoff','inflight','unknown','unknown')
path <- "/Users/jacquelineguo/Documents/NEU/Spring 2022/CS5200/HW/Practicum1"
fn <- "BirdStrikesData.csv"
fileName <- paste(path, fn, sep = "/")
df <- read_csv(fileName, show_col_types = FALSE, n_max=1000)
BirdStrikes <- sqldf('
select * from df
where ("Aircraft: Airline/Operator") not in ("MILITARY")')
head(BirdStrikes)
incidents <- sqldf(
'select "Record ID" as ID,
ifnull("Airport: Name","unknown") as Airport, FlightDate as Date,
ifnull("Aircraft: Airline/Operator","UNKNOWN") as Airline,
"Aircraft: Make/Model" as Aircraft,
"Origin State" as Origin,
ifnull("When: Phase of flight","unknown") as Phase,
"Effect: Impact to flight" as Impact,
"Conditions: Sky" as Condition
from BirdStrikes; ')
head(incidents)
airlines <- sqldf('
select distinct ("Aircraft: Airline/Operator") as airlineName                   FROM BirdStrikes
')
airlines <- na.omit(airlines)
head(airlines)
airport <- sqldf('
select distinct ("Airport: Name") as airportName,
"Origin State" as state
from BirdStrikes')
airport <- na.omit(airport)
airport[nrow(airport) + 1,] = c("unknown")
head(airport)
conditions <- sqldf('
select distinct ("Conditions: Sky") as condition
from BirdStrikes')
conditions <- na.omit(conditions)
conditions[nrow(conditions) + 1,] = c("unknown")
head(conditions)
phases <- sqldf('
select distinct (Phase) phase
from incidents')
phases$phase_new <- c('inflight','landing','landing','takeoff','inflight','unknown','unknown')
path <- "/Users/jacquelineguo/Documents/NEU/Spring 2022/CS5200/HW/Practicum1"
fn <- "BirdStrikesData.csv"
fileName <- paste(path, fn, sep = "/")
df <- read_csv(fileName, show_col_types = FALSE, n_max=10000)
path <- "/Users/jacquelineguo/Documents/NEU/Spring 2022/CS5200/HW/Practicum1"
fn <- "BirdStrikesData.csv"
fileName <- paste(path, fn, sep = "/")
df <- read_csv(fileName, show_col_types = FALSE, n_max=6000)
BirdStrikes <- sqldf('
select * from df
where ("Aircraft: Airline/Operator") not in ("MILITARY")')
head(BirdStrikes)
incidents <- sqldf(
'select "Record ID" as ID,
ifnull("Airport: Name","unknown") as Airport, FlightDate as Date,
ifnull("Aircraft: Airline/Operator","UNKNOWN") as Airline,
"Aircraft: Make/Model" as Aircraft,
"Origin State" as Origin,
ifnull("When: Phase of flight","unknown") as Phase,
"Effect: Impact to flight" as Impact,
"Conditions: Sky" as Condition
from BirdStrikes; ')
head(incidents)
airlines <- sqldf('
select distinct ("Aircraft: Airline/Operator") as airlineName                   FROM BirdStrikes
')
airlines <- na.omit(airlines)
head(airlines)
airport <- sqldf('
select distinct ("Airport: Name") as airportName,
"Origin State" as state
from BirdStrikes')
airport <- na.omit(airport)
airport[nrow(airport) + 1,] = c("unknown")
head(airport)
conditions <- sqldf('
select distinct ("Conditions: Sky") as condition
from BirdStrikes')
conditions <- na.omit(conditions)
conditions[nrow(conditions) + 1,] = c("unknown")
head(conditions)
phases <- sqldf('
select distinct (Phase) phase
from incidents')
phases$phase_new <- c('inflight','landing','landing','takeoff','inflight','unknown','unknown')
phases
# 1. Library
library(RMySQL)
library(DBI)
library(readr)
library(sqldf)
# 2. Settings
db_user <- 'cs5200neu'
db_password <- 'm@UbDiK2eU5!@Wr'
db_name <- 'cs5200dbxg'
db_host <- 'db4free.net' # AWS Host
db_port <- 3306
# 3. Read data from db
mydb <-  dbConnect(MySQL(), user = db_user, password = db_password,
dbname = db_name, host = db_host, port = db_port)
path <- "/Users/jacquelineguo/Documents/NEU/Spring 2022/CS5200/HW/Practicum1"
fn <- "BirdStrikesData.csv"
fileName <- paste(path, fn, sep = "/")
df <- read_csv(fileName, show_col_types = FALSE, n_max=6000)
BirdStrikes <- sqldf('
select * from df
where ("Aircraft: Airline/Operator") not in ("MILITARY")')
head(BirdStrikes)
incidents <- sqldf(
'select "Record ID" as ID,
ifnull("Airport: Name","unknown") as Airport, FlightDate as Date,
ifnull("Aircraft: Airline/Operator","UNKNOWN") as Airline,
"Aircraft: Make/Model" as Aircraft,
"Origin State" as Origin,
ifnull("When: Phase of flight","unknown") as Phase,
"Effect: Impact to flight" as Impact,
"Conditions: Sky" as Condition
from BirdStrikes; ')
head(incidents)
airlines <- sqldf('
select distinct ("Aircraft: Airline/Operator") as airlineName                   FROM BirdStrikes
')
airlines <- na.omit(airlines)
head(airlines)
airport <- sqldf('
select distinct ("Airport: Name") as airportName,
"Origin State" as state
from BirdStrikes')
airport <- na.omit(airport)
airport[nrow(airport) + 1,] = c("unknown")
head(airport)
conditions <- sqldf('
select distinct ("Conditions: Sky") as condition
from BirdStrikes')
conditions <- na.omit(conditions)
conditions[nrow(conditions) + 1,] = c("unknown")
head(conditions)
phases <- sqldf('
select distinct (Phase) phase
from incidents')
phases$phase_new <- c('inflight','landing','landing','takeoff','inflight','unknown','unknown')
phases
insert_airports <- function() {
for (i in 1 : nrow(airport)) {
airport1 <- paste0('"', airport[i, 1], '"')
if (is.na(airport[i, 2])) {
state <- 'NULL'
} else {
state <- paste0('"', airport[i, 2], '"')
}
cmd <- paste0('insert into airports(aid, airportName, state) values (',i,',',airport1,',',state,')')
dbSendQuery(mydb,cmd)
}
}
insert_airports()
insert_airlines <- function() {
for (i in 1:nrow(airlines)) {
airline <- paste0('"', airlines[i, 1], '"')
cmd <- paste0('insert into airlines(airlineId, airline) values (',i,',',airline,')')
dbSendQuery(mydb, cmd)
}
}
insert_airlines()
insert_conditions <- function() {
for (i in 1:nrow(conditions)) {
if (is.na(conditions[i, 1])) {
next
} else {
condition <- paste0('"', conditions[i, 1], '"')
}
cmd <- paste0('insert into conditions(cid, conditions) values (',i,',',condition,')')
dbSendQuery(mydb, cmd)
}
}
insert_conditions()
cmd1<-"select * from airlines"
airlines<-dbGetQuery(mydb,cmd1)
head(airlines)
cmd2<-"select * from airports"
airports<-dbGetQuery(mydb,cmd2)
head(airports)
cmd3 <- "select * from conditions"
conditions<-dbGetQuery(mydb,cmd3)
head(conditions)
insert_incident <- function() {
for (i in 1:nrow(incidents)) {
id <- paste0('"', incidents[i,1], '"')
query <- paste0('select aid from airports where "airportName"=', '"', incidents[i,2], '"')
temp <- sqldf(query)
airport <- temp[1,1]
date <- incidents[i,3]
if(is.na(date))
{
date <- 'NULL'
} else {
date <- gsub( " .*$", "", date)
date <- as.Date(date, format = "%m/%d/%y")
date <- paste0('"',date,'"')
}
query <- paste0('select airlineId from airlines where "airline"=','"',incidents[i,4],'"')
temp1<-sqldf(query)
airline<-temp1[1,1]
if(is.na(incidents[i,5])){
aircraft<-'NULL'
}else{
aircraft<-paste0('"',incidents[i,5],'"')}
query<-paste0('select "phase_new" from phases where "phase"=','"',incidents[i,7],'"')
phase<-sqldf(query)
phase<-paste0('"',phase,'"')
if(is.na(incidents[i,8])){
impact <- FALSE
} else {
impact<- TRUE}
if (is.na(incidents[i, 9]) | incidents[i, 9] == "None") {
condi <- 4
} else {
query <- paste0('select "cid" from conditions where "conditions"=','"',incidents[i, 9],'"')
temp2<-sqldf(query)
condi<-temp2[1,1]
}
cmd<-paste0('insert into incidents (iid, incidentDate, origin, airlineId, aircraft, flightPhase, impact, cond) values (',id,',',date,',',airport,',',airline,',',aircraft,',',phase,', ',impact,',',condi,')')
dbSendQuery(mydb,cmd)
}
}
insert_incident ()
library(RSQLite)
library(sqldf)
# if database file already exists, we connect to it, otherwise
# we create a new database
dbcon <- dbConnect(RSQLite::SQLite(), "/Users/jacquelineguo/Documents/NEU/sqlite/sakila.db")
install.packages("tictoc")
library(tictoc)
tic("sleeping")
print("falling asleep...")
print("...waking up")
toc()
library(RMySQL)
mydb = dbConnect(MySQL(),user='root', password='password', dbname='database_name', host='host')
library(RMySQL)
mydb = dbConnect(MySQL(),user='root', password='Poppy6.29', dbname='sakila', host='host')
library(RMySQL)
mydb = dbConnect(MySQL(),user='root', password='Poppy6.29', dbname='sakila', host='host')
library(RMySQL)
mydb = dbConnect(MySQL(),user='root', password='Poppy6.29', dbname='sakila', host='host')
library(RMySQL)
mydb = dbConnect(MySQL(),user='root', password='Poppy6.29', dbname='sakila', host='Jacquelines-MacBook-Pro.local')
tic("timing1")
